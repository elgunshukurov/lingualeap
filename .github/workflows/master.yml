name: Master CI/CD

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: lingualeap_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check code style
        run: ./gradlew checkstyleMain checkstyleTest

      - name: Run tests with Gradle
        run: ./gradlew test

      - name: Build with Gradle
        run: ./gradlew build

      - name: Build Docker image
        run: |
          docker build -t lingualeap:${{ github.sha }} .

      - name: Login to Docker Hub
        if: github.event_name == 'push'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Push Docker image
        if: github.event_name == 'push'
        run: |
          docker tag lingualeap:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/lingualeap:latest
          docker tag lingualeap:${{ github.sha }} ${{ secrets.DOCKER_HUB_USERNAME }}/lingualeap:${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lingualeap:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/lingualeap:${{ github.sha }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/reports/tests/

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: build/reports/jacoco/