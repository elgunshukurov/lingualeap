plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'checkstyle'
	id 'jacoco'
	id 'pmd'
}

group = 'ai.lingualeap'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

apply from: 'gradle/checks.gradle'

repositories {
	mavenCentral()
}

ext {
	lombokVersion = '1.18.30'
	testcontainersVersion = '1.19.3'
	postgresqlVersion = '42.7.1'
	junitPlatformVersion = '1.10.1'
	mapstructVersion = '1.5.5.Final'
	springdocVersion = '2.7.0'
}

dependencies {
	// Spring Boot dependencies managed by Spring Boot BOM
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	// Database
	runtimeOnly "org.postgresql:postgresql:${postgresqlVersion}"

	// Lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	// MapStruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// Lombok ve MapStruct
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// Logging
	implementation 'org.slf4j:slf4j-api:2.0.16'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// SpringDoc OpenAPI
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	// Validation
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'


	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly "org.junit.platform:junit-platform-launcher:${junitPlatformVersion}"

	// TestContainers dependencies
	testImplementation "org.testcontainers:junit-jupiter:${testcontainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
}

// Configure main build task
build {
	dependsOn jacocoTestReport
	dependsOn jacocoTestCoverageVerification
}

// Configure check task
check {
	dependsOn jacocoTestCoverageVerification
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}
